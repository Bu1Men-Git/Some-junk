@name Lazer Cannon
@persist Fire Power Spread Amount FireRate Max
@persist LazerEmitter:table Owner:entity PlID

runOnTick(1)

if(first() | duped()) { 
    #include "particles/particles"
    #include "particles/lazerparticles"
    #include "bigbrain/autocpu"
    
    Power = 700
    Spread = 10
    Amount = 10
    FireRate = 100
    Max = 10
    
    function void table:onLazerStopped(R:ranger) { 
        This:setLife(0)
        
        local Jump = owner():keyReload() | R:entity() == owner()
        
        local Ent = R:entity()
        
        if(Ent != owner() & R:pos():distance(owner():pos()) > 200) { 
            boomboom(R:pos(), 1000, min(This:getSize()*10, R:pos():distance(owner():pos())/2 - 1))
        }
            
        if(R:hit()) { 
            This:getEnt():soundPlay(This:getID(),1,"weapons/taser/taser_shoot_birthday.wav")
            
            if(R:distance() != 0) { 
                local NewVel = -(This:getVel()*0.9):reflect(R:hitNormal())
                LazerEmitter:getParticles():createLazer(This:getSize(), R:pos(), NewVel)
            }
            
            if(Ent:isValid()) { 
                if(Ent:isValidPhysics()) {
                    Ent:applyOffsetForce(This:getVel() * Ent:mass(), R:pos())
                } elseif(Ent:isPlayer()) {
                    #ifdef entity:plyApplyForce(vector) 
                        Ent:plyApplyForce(This:getVel()*30)
                    #endif
                }
            }
        }
    }
    
    LazerEmitter = createLazerEmitter(100, owner():shootPos(), vec(), FireRate, Max)
    timer("fire", FireRate)
    
    runOnTick(1)
}


Fire = owner():keyAttack2() 

entity():setName("Lazers: " + Lazers:count())

while(canProcess(5000,2000)) {
   LazerEmitter:controlledUpdateEmitter(Owner:keyAttack2(), 1)
}

#[while(canProcess()) {
    if(PlID < players():count()) { 
        PlID++
    } else {
        PlID = 1
    }]#
    
    Owner = owner()
    
    if(Owner:keyAttack2()) { 
        LazerEmitter:setSize(random(100,200))
        LazerEmitter:setPos((Owner:vel() * 0.1) + Owner:shootPos() + (Owner:eye() * (200 * (1-Owner:keyReload()*2))))
        LazerEmitter:setVel(Owner:eye() * Power + vec(random(-Spread,Spread),random(-Spread,Spread),random(-Spread,Spread)))
    }
    
   # 
#}

