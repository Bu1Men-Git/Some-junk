@name Amongusifier

@persist [PlyAttacherHolo VentAttacher Body Bone LeftLegAttacher RightLegAttacher RightHandAttacher LeftHandAttacher]:entity 

@persist [Ply Chair CameraPod CameraDirector]:entity 

@persist [CPod]:wirelink 

@persist VentCamPos:vector 

@persist Walking Walknum Venting VentNum ActuallyVenting 

@inputs 
@outputs 


W = Ply:keyForward()
S = Ply:keyBack()
D = Ply:keyRight()
A = Ply:keyLeft()
Shift = Ply:keySprint()
Space = Ply:keyJump()
Crouch = Ply:keyDuck()


if(first()){
propSpawnUndo(0)
propSpawnEffect(0)
#propSpawnASync(1)
enableConstraintUndo(0)

runOnLast(1)
runOnTick(1)

Ply = owner()

Color = Ply:getPlayerColor()

Chair = seatSpawn("models/hunter/plates/plate.mdl", vec(0, 0, 0), ang(0, 0, 0), 1)
Chair:propMakePersistent(1)
Chair:propNotSolid(1)
Chair:setAlpha(0)
Chair:setMaterial("null")

CameraPod = spawnCamController(entity():pos()+vec(0, 15, 0), ang(0, 0, 0), 1, 1, 1, 0, 1, 0, 1, 0, 0)
CPod = CameraPod:wirelink()
CameraPod:linkToPod(Chair)
CPod["Activated", number] = 1

holoCreate(1)
PlyAttacherHolo = holoEntity(1)
holoPos(1, entity():pos()+vec(25, 0, 0))
holoAng(1, ang(0))
holoScale(1, vec(0))

holoCreate(2)
Body = holoEntity(2)
holoPos(2, PlyAttacherHolo:toWorld(vec(0, 0, 25)))
holoAng(2, PlyAttacherHolo:toWorld(ang(0, 0, 0)))
holoParent(2, PlyAttacherHolo)
holoModel(2, "hq_cylinder")
holoScale(2, vec(1.5))
holoColor(2, Color)

holoClip(2, vec(0, 0, 1.4), vec(0, 0, -1), 0)


holoCreate(3)
holoPos(3, Body:toWorld(vec(0, 0, 9)))
holoAng(3, Body:toWorld(ang(0, 0, 0)))
holoParent(3, Body)
holoModel(3, "hq_dome")
holoScale(3, vec(1.5))
holoColor(3, Color)

holoCreate(4)
holoPos(4, Body:toWorld(vec(0, 0, -9)))
holoAng(4, Body:toWorld(ang(0, 0, 180)))
holoParent(4, Body)
holoModel(4, "hq_dome")
holoScale(4, vec(1.5, 1.5, 0.7))
holoColor(4, Color)

holoCreate(5)
holoPos(5, Body:toWorld(vec(-10, 0, 1)))
holoAng(5, Body:toWorld(ang(0, 0, 0)))
holoParent(5, Body)
holoModel(5, "hq_rcube")
holoScale(5, vec(0.6, 1.3, 1.8))
holoColor(5, Color)

holoCreate(6)
holoPos(6, Body:toWorld(vec(4, 0, 6)))
holoAng(6, Body:toWorld(ang(0, 0, 0)))
holoParent(6, Body)
holoModel(6, "hq_rcylinder")
holoScale(6, vec(1, 1.2, 0.5))
holoColor(6, vec(177, 242, 242))
holoMaterial(6, "models/shiny")

LegHeight = -11

holoCreate(7)
LeftLegAttacher = holoEntity(7)
holoPos(7, Body:toWorld(vec(0, 4.5, LegHeight)))
holoAng(7, Body:toWorld(ang(0, 0, 0)))
holoParent(7, Body)
holoScale(7, vec(0))

holoCreate(8)
RightLegAttacher = holoEntity(8)
holoPos(8, Body:toWorld(vec(0, -4.5, LegHeight)))
holoAng(8, Body:toWorld(ang(0, 0, 0)))
holoParent(8, Body)
holoScale(8, vec(0))

holoCreate(9)
holoPos(9, LeftLegAttacher:toWorld(vec(0, 0, -6)))
holoAng(9, LeftLegAttacher:toWorld(ang(0, 0, 0)))
holoParent(9, LeftLegAttacher)
holoModel(9, "hq_rcylinder")
holoScale(9, vec(0.75, 0.75, 1.6))
holoColor(9, Color)

holoCreate(10)
holoPos(10, RightLegAttacher:toWorld(vec(0, 0, -6)))
holoAng(10, RightLegAttacher:toWorld(ang(0, 0, 0)))
holoParent(10, RightLegAttacher)
holoModel(10, "hq_rcylinder")
holoScale(10, vec(0.75, 0.75, 1.6))
holoColor(10, Color)

holoCreate(11)
holoPos(11, Body:toWorld(vec(0, 0, 1.4)))
holoAng(11, Body:toWorld(ang(0, 0, 0)))
holoParent(11, Body)
holoModel(11, "cplane")
holoScale(11, vec(1.5))
holoMaterial(11, "models/flesh")

holoCreate(12)
Bone = holoEntity(12)
holoPos(12, Body:toWorld(vec(0, 0, 2.5)))
holoAng(12, Body:toWorld(ang(0, 0, 0)))
holoParent(12, Body)
holoModel(12, "hq_rcylinder")
holoScale(12, vec(0.4, 0.4, 1))

BoneNubDist = 2
BoneNubHeight = 6

holoCreate(13)
holoPos(13, Bone:toWorld(vec(0, BoneNubDist, BoneNubHeight)))
holoAng(13, Bone:toWorld(ang(0, 0, 0)))
holoParent(13, Bone)
holoModel(13, "hq_icosphere")
holoScale(13, vec(0.4, 0.4, 0.4))

holoCreate(14)
holoPos(14, Bone:toWorld(vec(0, -BoneNubDist, BoneNubHeight)))
holoAng(14, Bone:toWorld(ang(0, 0, 0)))
holoParent(14, Bone)
holoModel(14, "hq_icosphere")
holoScale(14, vec(0.4, 0.4, 0.4))

holoCreate(15)
RightHandAttacher = holoEntity(15)
holoPos(15, Body:toWorld(vec(0, -15*0, -4)))
holoAng(15, Body:toWorld(ang(0, 0, 0)))
holoParent(15, Body)
holoScale(15, vec(0))

holoCreate(16)
LeftHandAttacher = holoEntity(16)
holoPos(16, Body:toWorld(vec(0, 15*0, -4)))
holoAng(16, Body:toWorld(ang(0, 0, 0)))
holoParent(16, Body)
holoScale(16, vec(0))

holoCreate(17)
holoPos(17, RightHandAttacher:toWorld(vec(-42, 1.1, -2)))
holoAng(17, RightHandAttacher:toWorld(ang(-90, 90, 0)))
holoParent(17, RightHandAttacher)
holoScale(17, vec(1.3))
holoModel(17, "models/weapons/c_arms_dod.mdl")
holoEntity(17):setSubMaterial(1, "null")
holoEntity(17):setSubMaterial(2, "models/debug/debugwhite")
holoColor(17, Color)

holoClipEnabled(17, 1)
holoClip(17, vec(0, 0, 0), vec(0, -2, 0), 0)

holoCreate(18)
holoPos(18, LeftHandAttacher:toWorld(vec(-42, -1.1, -2)))
holoAng(18, LeftHandAttacher:toWorld(ang(-90, 90, 180)))
holoParent(18, LeftHandAttacher)
holoScale(18, vec(1.3))
holoModel(18, "models/weapons/c_arms_dod.mdl")
holoEntity(18):setSubMaterial(1, "null")
holoEntity(18):setSubMaterial(2, "models/debug/debugwhite")
holoColor(18, Color)

holoClipEnabled(18, 1)
holoClip(18, vec(0, 0, 0), vec(0, 2, 0), 0)


holoCreate(101)
holoParent(101, RightHandAttacher)

holoCreate(300)
VentAttacher = holoEntity(300)
holoPos(300, entity():pos()+vec(25, 0, 0))
holoAng(300, ang(0))
holoScale(300, vec(0))



holoCreate(301)
holoPos(301, VentAttacher:toWorld(vec(0, 0, 0.2)))
holoAng(301, VentAttacher:toWorld(ang(90, 0, 0)))
holoParent(301, VentAttacher)
holoScale(301, vec(1))
holoModel(301, "models/props_junk/vent001.mdl")
holoColor(301, vec(100))
holoMaterial(301, "models/debug/debugwhite")

holoCreate(302)
holoPos(302, VentAttacher:toWorld(vec(0, 0, 0)))
holoAng(302, VentAttacher:toWorld(ang(0, 0, 0)))
holoParent(302, VentAttacher)
holoScale(302, vec(3.2))
holoModel(302, "plane")
holoColor(302, vec(0))

holoCreate(303)
holoAng(303, ang(0))
holoScale(303, vec(0))

holoCreate(304)
CameraDirector = holoEntity(304)
holoScale(304, vec(0))

holoCreate(305)
holoAng(305, ang(90, 0, 0))
holoScale(305, vec(1))
holoModel(305, "models/props_junk/vent001.mdl")
holoColor(305, vec(0, 255, 0))
holoMaterial(305, "models/debug/debugwhite")
holoDisableShading(305, 1)



function void ventSnd1(){
holoEntity(301):soundPlay(2, 5, "doors/vent_open2.wav"), soundPitch(2, 75)
}

CPod["Parent", entity] = holoEntity(303)
}

owner():setAlpha(0)
owner():setMaterial("null")
if(last()){
owner():setAlpha(255)
owner():setMaterial("")
}


IsPistol = 0

holoPos(15, Body:toWorld(vec(0, -15*0, -4)))
holoAng(15, Body:toWorld(ang(0, 0, 0)))
holoPos(16, Body:toWorld(vec(0, 15*0, -4)))
holoAng(16, Body:toWorld(ang(0, 0, 0)))
holoPos(101, vec(0, 0, 0))
holoScale(101, vec(1))

Ply:weapon():setAlpha(0)


if(Ply:weapon():type() == "none" | Ply:weapon():type() == ""){

}

elseif(Ply:weapon():type() == "weapon_pistol"){
holoPos(15, Body:toWorld(vec(14, -8, 0)))
holoAng(15, Body:toWorld(ang(0, 0, 0)))

holoModel(101, "models/weapons/w_pist_usp.mdl")
holoPos(101, RightHandAttacher:toWorld(vec(3, 0.5, -4)))
holoAng(101, RightHandAttacher:toWorld(ang(0, 0, 0)))
holoScale(101, vec(1.5))
IsPistol = 1
}

elseif(Ply:weapon():type() == "weapon_crossbow"){
holoPos(15, Body:toWorld(vec(17, -4, 0.5)))
holoAng(15, Body:toWorld(ang(0, 0, 0)))

holoPos(16, Body:toWorld(vec(31, -1, 1)))
holoAng(16, Body:toWorld(ang(0, -90, -90)))

holoModel(101, "models/weapons/w_crossbow.mdl")
holoPos(101, RightHandAttacher:toWorld(vec(0, -1.7, 1)))
holoAng(101, RightHandAttacher:toWorld(ang(0, 0, 0)))
IsPistol = 1
}

else{
holoPos(15, Body:toWorld(vec(14, -8, 0)))

holoModel(101, Ply:weapon():model())
holoPos(101, RightHandAttacher:toWorld(vec(0, 0, 0)))
holoAng(101, RightHandAttacher:toWorld(ang(0, 0, 0)))
}




if(Ply:vel():distance(vec(0)) > 0){
Walking = 1
}
else{
Walking = 0
}


if(Walking){
Walknum += 10
}
else{
Walknum = 0
}

WalkSin = sin(Walknum)*45

holoAng(7, Body:toWorld(ang(WalkSin, 0, 0)))
holoAng(8, Body:toWorld(ang(-WalkSin, 0, 0)))


Alive = owner():isAlive()

holoAlpha(3, 255*Alive)
holoAlpha(6, 255*Alive)
holoClipEnabled(2, 1, !Alive)

if(changed(Alive) & !Alive){
Body:soundPlay(1, 3, "physics/body/body_medium_break2.wav")
}

if(Alive){
holoPos(1, Ply:pos())
holoAng(1, Ply:angles())
}


VentKey = Ply:keyPressed("x")

if(changed(VentKey) & VentKey & (VentNum == 0 | VentNum == 270)){
if(!Venting){
Venting = 1

holoPos(300, Ply:pos())
holoAng(300, ang(0))

VentCamPos = Ply:shootPos()
Chair:use()

ventSnd1()
}

elseif(Venting){
Venting = 0

ventSnd1()

NewVentRanger = rangerOffsetHull(9999999999, VentCamPos, vec(0, 0, -1), vec(32, 32, 5))
holoPos(300, NewVentRanger:position())
}
}


VentRate = 4
VentMaxSin = 270

if(Venting){
VentNum += VentRate

VentNum = clamp(VentNum, 0, VentMaxSin)
}
else{
VentNum -= VentRate

VentNum = clamp(VentNum, 0, VentMaxSin)
}



if(VentNum == 0){
ActuallyVenting = 0
}
else{
ActuallyVenting = 1
}



VentSin = sin(VentNum)*50

if(ActuallyVenting){
holoPos(1, VentAttacher:toWorld(vec(0, 0, VentSin - 250*(VentNum == VentMaxSin))))
holoAng(1, Ply:angles())

CAngle = CPod["CamAng",angle]

holoAng(304, ang(0, CAngle:yaw(), 0))

Speed = 3+6*(Shift)

if(W){
VentCamPos += CameraDirector:forward()*Speed
}
if(S){
VentCamPos += -CameraDirector:forward()*Speed
}
if(A){
VentCamPos += -CameraDirector:right()*Speed
}
if(D){
VentCamPos += CameraDirector:right()*Speed
}
if(Space){
VentCamPos += vec(0, 0, Speed)
}
if(Crouch){
VentCamPos += vec(0, 0, -Speed)
}


CameraRanger = rangerOffsetHull(80*0, VentCamPos, vec(0, 0, 1), vec(32, 32, 5))

holoPos(303, CameraRanger:position())
holoAng(303, ang(0, 0, 0))

NewVentRanger = rangerOffsetHull(9999999999, VentCamPos, vec(0, 0, -1), vec(32, 32, 5))
holoPos(305, NewVentRanger:position()+vec(0, 0, 0.2))
}

holoVisible(305, players(), 0)
holoVisible(305, Ply, Venting)


if(changed(ActuallyVenting) & !ActuallyVenting){
Chair:setPos(VentAttacher:pos()+vec(0, 0, 2))
Chair:ejectPod(VentAttacher:pos()+vec(0, 0, 2))
}



























































#interval(1)
